equazioni di Lagrange del sistema dinamico

prima equazione
tau1
teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)

seconda equazione
tau2
teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

in forma matriciale/vettoriale
 teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)
                                                                                                                                       teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

con i dati del manipolatore
 (49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 + teta1_dot_dot*(cos(teta2) + 5/3) - (teta2_dot^2*sin(teta2))/2 + teta2_dot_dot*(cos(teta2)/2 + 1/3) - teta1_dot*teta2_dot*sin(teta2)
                                                                         (sin(teta2)*teta1_dot^2)/2 + teta2_dot_dot/3 + (49*cos(teta1 + teta2))/10 + teta1_dot_dot*(cos(teta2)/2 + 1/3)
scrivo il sistema nella forma: B(q)*q_dot_dot + C(q,q_dot)*q_dot + g(q) = tau

matrice B(q) dei termini inerziali

[ M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O, J2A + M2*b2*l1*cos(teta2)]
[                   J2A + M2*b2*l1*cos(teta2),                       J2A]

vettore delle accelerazioni angolari q_dot_dot

 teta1_dot_dot
 teta2_dot_dot

matrice C(q,q_dot) dei termini centrifughi e di coriolis

[ -2*M2*b2*l1*teta2_dot*sin(teta2), -M2*b2*l1*teta2_dot*sin(teta2)]
[    M2*b2*l1*teta1_dot*sin(teta2),                              0]
vettore delle velocità angolari q_dot

 teta1_dot
 teta2_dot

vettore g(q) dei termini gravitazionali


 M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)
                                         M2*ag*b2*cos(teta1 + teta2)

{Undefined function or variable 'tau1_ss'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('manipulator2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\manipulator2dof.m', 120)" style="font-weight:bold">manipulator2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\manipulator2dof.m',120,0)">line 120</a>)
u = [tau1_ss; tau2_ss]; } 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\manipulator2dof.m',120,0)
manipulator2dof
equazioni di Lagrange del sistema dinamico

prima equazione
tau1
teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)

seconda equazione
tau2
teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

in forma matriciale/vettoriale
 teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)
                                                                                                                                       teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

con i dati del manipolatore
 (49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 + teta1_dot_dot*(cos(teta2) + 5/3) - (teta2_dot^2*sin(teta2))/2 + teta2_dot_dot*(cos(teta2)/2 + 1/3) - teta1_dot*teta2_dot*sin(teta2)
                                                                         (sin(teta2)*teta1_dot^2)/2 + teta2_dot_dot/3 + (49*cos(teta1 + teta2))/10 + teta1_dot_dot*(cos(teta2)/2 + 1/3)
scrivo il sistema nella forma: B(q)*q_dot_dot + C(q,q_dot)*q_dot + g(q) = tau

matrice B(q) dei termini inerziali

[ M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O, J2A + M2*b2*l1*cos(teta2)]
[                   J2A + M2*b2*l1*cos(teta2),                       J2A]

vettore delle accelerazioni angolari q_dot_dot

 teta1_dot_dot
 teta2_dot_dot

matrice C(q,q_dot) dei termini centrifughi e di coriolis

[ -2*M2*b2*l1*teta2_dot*sin(teta2), -M2*b2*l1*teta2_dot*sin(teta2)]
[    M2*b2*l1*teta1_dot*sin(teta2),                              0]
vettore delle velocità angolari q_dot

 teta1_dot
 teta2_dot

vettore g(q) dei termini gravitazionali


 M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)
                                         M2*ag*b2*cos(teta1 + teta2)

spazio di stato

vettore z2_dot

                                                                                     ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)
 ((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta1_dot_dot
((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta2_dot_dot
((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

{Undefined function or variable 'u1'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('manipulator2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\manipulator2dof.m', 158)" style="font-weight:bold">manipulator2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\manipulator2dof.m',158,0)">line 158</a>)
u = [u1; u2]; %vettore degli ingressi disp('vettore degli ingressi u'); } 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\manipulator2dof.m',158,0)
manipulator2dof
equazioni di Lagrange del sistema dinamico

prima equazione
tau1
teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)

seconda equazione
tau2
teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

in forma matriciale/vettoriale
 teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)
                                                                                                                                       teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

con i dati del manipolatore
 (49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 + teta1_dot_dot*(cos(teta2) + 5/3) - (teta2_dot^2*sin(teta2))/2 + teta2_dot_dot*(cos(teta2)/2 + 1/3) - teta1_dot*teta2_dot*sin(teta2)
                                                                         (sin(teta2)*teta1_dot^2)/2 + teta2_dot_dot/3 + (49*cos(teta1 + teta2))/10 + teta1_dot_dot*(cos(teta2)/2 + 1/3)
scrivo il sistema nella forma: B(q)*q_dot_dot + C(q,q_dot)*q_dot + g(q) = tau

matrice B(q) dei termini inerziali

[ M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O, J2A + M2*b2*l1*cos(teta2)]
[                   J2A + M2*b2*l1*cos(teta2),                       J2A]

vettore delle accelerazioni angolari q_dot_dot

 teta1_dot_dot
 teta2_dot_dot

matrice C(q,q_dot) dei termini centrifughi e di coriolis

[ -2*M2*b2*l1*teta2_dot*sin(teta2), -M2*b2*l1*teta2_dot*sin(teta2)]
[    M2*b2*l1*teta1_dot*sin(teta2),                              0]
vettore delle velocità angolari q_dot

 teta1_dot
 teta2_dot

vettore g(q) dei termini gravitazionali


 M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)
                                         M2*ag*b2*cos(teta1 + teta2)

spazio di stato

vettore z2_dot

                                                                                     ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)
 ((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta1_dot_dot
((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta2_dot_dot
((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)


 tau1
 tau2
variabile di stato x1_dot

teta1_dot

variabile di stato x2_dot

teta2_dot

variabile di stato x3_dot

((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

variabile di stato x4_dot

((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

matrice A_ss



[                                           (J2A*(M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*ag*b2*sin(teta1 + teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                                                                                                                                                                                                                                                                                                                                                                                                                                                             (J2A*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*J2A*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*J2A*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2,                                             (2*M2*b2*l1*teta1_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*J2A*M2*b2*l1*teta2_dot*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                          (J2A*(2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ (M2*ag*b2*sin(teta1 + teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((J2A + M2*b2*l1*cos(teta2))*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau1_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2, - (2*M2*b2*l1*teta2_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*teta1_dot*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), -((2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice B_ss

[                                                                                  0,                                                                                                   0]
[                                                                                  0,                                                                                                   0]
[                          J2A/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                  -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), (M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss con i dati inseriti



[                       (49*sin(teta1 + teta2)*(cos(teta2)/2 + 1/3))/(10*(cos(teta2)^2/4 - 4/9)) - ((49*sin(teta1 + teta2))/30 + (49*sin(teta1))/10)/(cos(teta2)^2/4 - 4/9),                                                                                                                                                                                                                                                             (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)) - (tau2_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - ((cos(teta2)*teta2_dot^2)/6 + (teta1_dot*cos(teta2)*teta2_dot)/3 + (49*sin(teta1 + teta2))/30)/(cos(teta2)^2/4 - 4/9) + (((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9) + (cos(teta2)*sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(6*(cos(teta2)^2/4 - 4/9)^2) - (tau1_ss*cos(teta2)*sin(teta2))/(6*(cos(teta2)^2/4 - 4/9)^2) + (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2),              - (teta2_dot*sin(teta2))/(3*(cos(teta2)^2/4 - 4/9)) - (teta1_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9),               -((teta1_dot*sin(teta2))/3 + (teta2_dot*sin(teta2))/3)/(cos(teta2)^2/4 - 4/9)]
[ ((cos(teta2)/2 + 1/3)*((49*sin(teta1 + teta2))/10 + (147*sin(teta1))/10))/(cos(teta2)^2/4 - 4/9) - (49*sin(teta1 + teta2)*(cos(teta2) + 5/3))/(10*(cos(teta2)^2/4 - 4/9)), (tau2_ss*sin(teta2))/(cos(teta2)^2/4 - 4/9) - (tau1_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - ((cos(teta2) + 5/3)*((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2))/(cos(teta2)^2/4 - 4/9) + (sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)) + ((cos(teta2)/2 + 1/3)*((cos(teta2)*teta2_dot^2)/2 + teta1_dot*cos(teta2)*teta2_dot + (49*sin(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2) + 5/3))/(2*(cos(teta2)^2/4 - 4/9)^2) + (cos(teta2)*sin(teta2)*(cos(teta2) + 5/3)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)^2) + (tau1_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)^2), (teta1_dot*sin(teta2)*(cos(teta2) + 5/3))/(cos(teta2)^2/4 - 4/9) + (teta2_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9), ((cos(teta2)/2 + 1/3)*(teta1_dot*sin(teta2) + teta2_dot*sin(teta2)))/(cos(teta2)^2/4 - 4/9)]

matrice B_ss con i dati inseriti

[                                           0,                                           0]
[                                           0,                                           0]
[               -1/(3*(cos(teta2)^2/4 - 4/9)), (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9)]
[ (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9),  -(cos(teta2) + 5/3)/(cos(teta2)^2/4 - 4/9)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss valutata nel punto di equilibrio

         0         0    1.0000         0
         0         0         0    1.0000
    0.0000   -0.0000         0         0
   -0.0000    0.0000         0         0

matrice B_ss valutata nel punto di equilibrio

         0         0
         0         0
    1.7143   -4.2857
   -4.2857   13.7143

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

PD2dof
{No appropriate method, property, or field 'signals' for class 'timeseries'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 149)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)">line 149</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1); %errore posizione 1 } 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
PD2dof
{Dot indexing is not supported for variables of this type.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 149)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)">line 149</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1); %errore posizione 1 } 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
PD2dof
{No appropriate method, property, or field 'signals' for class 'timeseries'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 149)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)">line 149</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1); %errore posizione 1 } 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
PD2dof
{Dot indexing is not supported for variables of this type.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 149)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)">line 149</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1); %errore posizione 1 } 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
PD2dof
{Dot indexing is not supported for variables of this type.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 149)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)">line 149</a>)
        e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1); %errore posizione 1 } 
PD2dof
{Matrix dimensions must agree.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 149)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)">line 149</a>)
        e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1); %errore posizione 1 } 
PD2dof
{Matrix dimensions must agree.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 149)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)">line 149</a>)
        e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1); %errore posizione 1 } 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',149,0)
PD2dof
{Matrix dimensions must agree.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 150)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',150,0)">line 150</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1); %errore posizione 1 } 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',150,0)
PD2dof
{Undefined function or variable 'max_err4'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 223)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',223,0)">line 223</a>)
    plot(T,max_err4,'.','Color','r')} 
PD2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 257)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',257,0)">line 257</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore uscita } 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',257,0)
PD2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 257)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',257,0)">line 257</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore uscita } 
ILC2dof
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('grid', 'C:\Program Files\MATLAB\R2018b\toolbox\matlab\graph2d\grid.m', 39)" style="font-weight:bold">grid</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\matlab\graph2d\grid.m',39,0)">line 39</a>)
First argument must be an axes handle.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 231)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',231,0)">line 231</a>)
    grid hold on } 
grid
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 215)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)">line 215</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 215)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)">line 215</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)
ILC2dof
{No appropriate method, property, or field 'signals' for class 'timeseries'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 75)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',75,0)">line 75</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);} 
ILC2dof
{Dot indexing is not supported for variables of this type.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 75)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',75,0)">line 75</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);} 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',75,0)
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 215)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)">line 215</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{No appropriate method, property, or field 'signals' for class 'timeseries'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 75)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',75,0)">line 75</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);} 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 215)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)">line 215</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{No appropriate method, property, or field 'signals' for class 'timeseries'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 75)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',75,0)">line 75</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);} 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 215)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)">line 215</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 215)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)">line 215</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{No appropriate method, property, or field 'signals' for class 'timeseries'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 75)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',75,0)">line 75</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);} 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 215)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)">line 215</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{Dot indexing is not supported for variables of this type.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 75)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',75,0)">line 75</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);} 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',75,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',75,0)
ILC2dof
{Dot indexing is not supported for variables of this type.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 75)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',75,0)">line 75</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);} 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 215)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)">line 215</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 215)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)">line 215</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 215)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)">line 215</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 215)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)">line 215</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',215,0)
manipulator2dof
equazioni di Lagrange del sistema dinamico

prima equazione
tau1
teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)

seconda equazione
tau2
teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

in forma matriciale/vettoriale
 teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)
                                                                                                                                       teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

con i dati del manipolatore
 (49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 + teta1_dot_dot*(cos(teta2) + 5/3) - (teta2_dot^2*sin(teta2))/2 + teta2_dot_dot*(cos(teta2)/2 + 1/3) - teta1_dot*teta2_dot*sin(teta2)
                                                                         (sin(teta2)*teta1_dot^2)/2 + teta2_dot_dot/3 + (49*cos(teta1 + teta2))/10 + teta1_dot_dot*(cos(teta2)/2 + 1/3)
scrivo il sistema nella forma: B(q)*q_dot_dot + C(q,q_dot)*q_dot + g(q) = tau

matrice B(q) dei termini inerziali

[ M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O, J2A + M2*b2*l1*cos(teta2)]
[                   J2A + M2*b2*l1*cos(teta2),                       J2A]

vettore delle accelerazioni angolari q_dot_dot

 teta1_dot_dot
 teta2_dot_dot

matrice C(q,q_dot) dei termini centrifughi e di coriolis

[ -2*M2*b2*l1*teta2_dot*sin(teta2), -M2*b2*l1*teta2_dot*sin(teta2)]
[    M2*b2*l1*teta1_dot*sin(teta2),                              0]
vettore delle velocità angolari q_dot

 teta1_dot
 teta2_dot

vettore g(q) dei termini gravitazionali


 M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)
                                         M2*ag*b2*cos(teta1 + teta2)

spazio di stato

vettore z2_dot

                                                                                     ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)
 ((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta1_dot_dot
((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta2_dot_dot
((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)


 tau1
 tau2
variabile di stato x1_dot

teta1_dot

variabile di stato x2_dot

teta2_dot

variabile di stato x3_dot

((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

variabile di stato x4_dot

((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

matrice A_ss



[                                           (J2A*(M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*ag*b2*sin(teta1 + teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                                                                                                                                                                                                                                                                                                                                                                                                                                                             (J2A*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*J2A*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*J2A*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2,                                             (2*M2*b2*l1*teta1_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*J2A*M2*b2*l1*teta2_dot*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                          (J2A*(2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ (M2*ag*b2*sin(teta1 + teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((J2A + M2*b2*l1*cos(teta2))*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau1_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2, - (2*M2*b2*l1*teta2_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*teta1_dot*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), -((2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice B_ss

[                                                                                  0,                                                                                                   0]
[                                                                                  0,                                                                                                   0]
[                          J2A/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                  -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), (M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss con i dati inseriti



[                       (49*sin(teta1 + teta2)*(cos(teta2)/2 + 1/3))/(10*(cos(teta2)^2/4 - 4/9)) - ((49*sin(teta1 + teta2))/30 + (49*sin(teta1))/10)/(cos(teta2)^2/4 - 4/9),                                                                                                                                                                                                                                                             (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)) - (tau2_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - ((cos(teta2)*teta2_dot^2)/6 + (teta1_dot*cos(teta2)*teta2_dot)/3 + (49*sin(teta1 + teta2))/30)/(cos(teta2)^2/4 - 4/9) + (((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9) + (cos(teta2)*sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(6*(cos(teta2)^2/4 - 4/9)^2) - (tau1_ss*cos(teta2)*sin(teta2))/(6*(cos(teta2)^2/4 - 4/9)^2) + (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2),              - (teta2_dot*sin(teta2))/(3*(cos(teta2)^2/4 - 4/9)) - (teta1_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9),               -((teta1_dot*sin(teta2))/3 + (teta2_dot*sin(teta2))/3)/(cos(teta2)^2/4 - 4/9)]
[ ((cos(teta2)/2 + 1/3)*((49*sin(teta1 + teta2))/10 + (147*sin(teta1))/10))/(cos(teta2)^2/4 - 4/9) - (49*sin(teta1 + teta2)*(cos(teta2) + 5/3))/(10*(cos(teta2)^2/4 - 4/9)), (tau2_ss*sin(teta2))/(cos(teta2)^2/4 - 4/9) - (tau1_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - ((cos(teta2) + 5/3)*((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2))/(cos(teta2)^2/4 - 4/9) + (sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)) + ((cos(teta2)/2 + 1/3)*((cos(teta2)*teta2_dot^2)/2 + teta1_dot*cos(teta2)*teta2_dot + (49*sin(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2) + 5/3))/(2*(cos(teta2)^2/4 - 4/9)^2) + (cos(teta2)*sin(teta2)*(cos(teta2) + 5/3)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)^2) + (tau1_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)^2), (teta1_dot*sin(teta2)*(cos(teta2) + 5/3))/(cos(teta2)^2/4 - 4/9) + (teta2_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9), ((cos(teta2)/2 + 1/3)*(teta1_dot*sin(teta2) + teta2_dot*sin(teta2)))/(cos(teta2)^2/4 - 4/9)]

matrice B_ss con i dati inseriti

[                                           0,                                           0]
[                                           0,                                           0]
[               -1/(3*(cos(teta2)^2/4 - 4/9)), (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9)]
[ (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9),  -(cos(teta2) + 5/3)/(cos(teta2)^2/4 - 4/9)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss valutata nel punto di equilibrio

         0         0    1.0000         0
         0         0         0    1.0000
    0.0000   -0.0000         0         0
   -0.0000    0.0000         0         0

matrice B_ss valutata nel punto di equilibrio

         0         0
         0         0
    1.7143   -4.2857
   -4.2857   13.7143

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 208)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)">line 208</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 208)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)">line 208</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 208)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)">line 208</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
[Warning: Input port 1 of '<a href="matlab:open_and_hilite_hyperlink ('Man2Link_slx/To Workspace1','error')">Man2Link_slx/To Workspace1</a>' is not connected.] 
[> In <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 54)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',54,0)">line 54</a>)] 
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\matlab\images\+matlab\+images\+internal\+resize\contributions.m',53,1)">53  </a>if ~isempty(kill)
ILC2dof
{No appropriate method, property, or field 'signals' for class 'timeseries'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 70)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',70,0)">line 70</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);    %errore posizione 1 } 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 208)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)">line 208</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)
ILC2dof
{Dot indexing is not supported for variables of this type.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 70)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',70,0)">line 70</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);    %errore posizione 1 } 
ILC2dof
{Dot indexing is not supported for variables of this type.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 70)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',70,0)">line 70</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);    %errore posizione 1 } 
PD2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 257)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',257,0)">line 257</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore uscita } 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 208)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)">line 208</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore uscita} 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)
sldemo_varsize_basic
ILC2dof
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 54)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',54,0)">line 54</a>)
Cannot start a new command line simulation while a simulation has started for the same model.} 
ILC2dof
{Matrix dimensions must agree.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 70)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',70,0)">line 70</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);    %errore posizione 1 } 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',70,0)
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 208)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)">line 208</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{Matrix dimensions must agree.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 70)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',70,0)">line 70</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);    %errore posizione 1 } 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 208)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)">line 208</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{Index exceeds the number of array elements (1).
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 208)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',208,0)">line 208</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') % manipolatore
    uscita} 
ILC2dof
{Matrix dimensions must agree.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 70)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',70,0)">line 70</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1);    %errore posizione 1 } 
ILC2dof
PD2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
PD2dof
ILC2dof
ILC2dof
ILC2dof
PD2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
ILC2dof
PD2dof
PD2dof
ILC2dof
manipulator2dof
equazioni di Lagrange del sistema dinamico

prima equazione
tau1
teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)

seconda equazione
tau2
teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

in forma matriciale/vettoriale
 teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)
                                                                                                                                       teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

con i dati del manipolatore
 (49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 + teta1_dot_dot*(cos(teta2) + 5/3) - (teta2_dot^2*sin(teta2))/2 + teta2_dot_dot*(cos(teta2)/2 + 1/3) - teta1_dot*teta2_dot*sin(teta2)
                                                                         (sin(teta2)*teta1_dot^2)/2 + teta2_dot_dot/3 + (49*cos(teta1 + teta2))/10 + teta1_dot_dot*(cos(teta2)/2 + 1/3)
scrivo il sistema nella forma: B(q)*q_dot_dot + C(q,q_dot)*q_dot + g(q) = tau

matrice B(q) dei termini inerziali

[ M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O, J2A + M2*b2*l1*cos(teta2)]
[                   J2A + M2*b2*l1*cos(teta2),                       J2A]

vettore delle accelerazioni angolari q_dot_dot

 teta1_dot_dot
 teta2_dot_dot

matrice C(q,q_dot) dei termini centrifughi e di coriolis

[ -2*M2*b2*l1*teta2_dot*sin(teta2), -M2*b2*l1*teta2_dot*sin(teta2)]
[    M2*b2*l1*teta1_dot*sin(teta2),                              0]
vettore delle velocità angolari q_dot

 teta1_dot
 teta2_dot

vettore g(q) dei termini gravitazionali


 M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)
                                         M2*ag*b2*cos(teta1 + teta2)

spazio di stato

vettore z2_dot

                                                                                     ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)
 ((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta1_dot_dot
((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta2_dot_dot
((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)


 tau1
 tau2
variabile di stato x1_dot

teta1_dot

variabile di stato x2_dot

teta2_dot

variabile di stato x3_dot

((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

variabile di stato x4_dot

((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

matrice A_ss



[                                           (J2A*(M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*ag*b2*sin(teta1 + teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                                                                                                                                                                                                                                                                                                                                                                                                                                                             (J2A*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*J2A*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*J2A*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2,                                             (2*M2*b2*l1*teta1_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*J2A*M2*b2*l1*teta2_dot*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                          (J2A*(2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ (M2*ag*b2*sin(teta1 + teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((J2A + M2*b2*l1*cos(teta2))*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau1_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2, - (2*M2*b2*l1*teta2_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*teta1_dot*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), -((2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice B_ss

[                                                                                  0,                                                                                                   0]
[                                                                                  0,                                                                                                   0]
[                          J2A/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                  -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), (M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss con i dati inseriti



[                       (49*sin(teta1 + teta2)*(cos(teta2)/2 + 1/3))/(10*(cos(teta2)^2/4 - 4/9)) - ((49*sin(teta1 + teta2))/30 + (49*sin(teta1))/10)/(cos(teta2)^2/4 - 4/9),                                                                                                                                                                                                                                                             (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)) - (tau2_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - ((cos(teta2)*teta2_dot^2)/6 + (teta1_dot*cos(teta2)*teta2_dot)/3 + (49*sin(teta1 + teta2))/30)/(cos(teta2)^2/4 - 4/9) + (((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9) + (cos(teta2)*sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(6*(cos(teta2)^2/4 - 4/9)^2) - (tau1_ss*cos(teta2)*sin(teta2))/(6*(cos(teta2)^2/4 - 4/9)^2) + (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2),              - (teta2_dot*sin(teta2))/(3*(cos(teta2)^2/4 - 4/9)) - (teta1_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9),               -((teta1_dot*sin(teta2))/3 + (teta2_dot*sin(teta2))/3)/(cos(teta2)^2/4 - 4/9)]
[ ((cos(teta2)/2 + 1/3)*((49*sin(teta1 + teta2))/10 + (147*sin(teta1))/10))/(cos(teta2)^2/4 - 4/9) - (49*sin(teta1 + teta2)*(cos(teta2) + 5/3))/(10*(cos(teta2)^2/4 - 4/9)), (tau2_ss*sin(teta2))/(cos(teta2)^2/4 - 4/9) - (tau1_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - ((cos(teta2) + 5/3)*((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2))/(cos(teta2)^2/4 - 4/9) + (sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)) + ((cos(teta2)/2 + 1/3)*((cos(teta2)*teta2_dot^2)/2 + teta1_dot*cos(teta2)*teta2_dot + (49*sin(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2) + 5/3))/(2*(cos(teta2)^2/4 - 4/9)^2) + (cos(teta2)*sin(teta2)*(cos(teta2) + 5/3)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)^2) + (tau1_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)^2), (teta1_dot*sin(teta2)*(cos(teta2) + 5/3))/(cos(teta2)^2/4 - 4/9) + (teta2_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9), ((cos(teta2)/2 + 1/3)*(teta1_dot*sin(teta2) + teta2_dot*sin(teta2)))/(cos(teta2)^2/4 - 4/9)]

matrice B_ss con i dati inseriti

[                                           0,                                           0]
[                                           0,                                           0]
[               -1/(3*(cos(teta2)^2/4 - 4/9)), (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9)]
[ (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9),  -(cos(teta2) + 5/3)/(cos(teta2)^2/4 - 4/9)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss valutata nel punto di equilibrio

         0         0    1.0000         0
         0         0         0    1.0000
    0.0000   -0.0000         0         0
   -0.0000    0.0000         0         0

matrice B_ss valutata nel punto di equilibrio

         0         0
         0         0
    1.7143   -4.2857
   -4.2857   13.7143

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

ILC2dof
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('sym/max', 'C:\Program Files\MATLAB\R2018b\toolbox\symbolic\symbolic\@sym\max.m', 123)" style="font-weight:bold">sym/max</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\symbolic\symbolic\@sym\max.m',123,0)">line 123</a>)
Input arguments must be convertible to floating-point numbers.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 68)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',68,0)">line 68</a>)
    xd1_old = pi/2*(x/max(x)); } 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',68,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',68,0)
PD2dof
{Matrix dimensions must agree.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 151)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',151,0)">line 151</a>)
    e_pos1 = controllo.signals.values(:,1) - uscita.signals.values(:,1); %errore posizione 1 } 
PD2dof
ILC2dof
ILC2dof
ILC2dof
PD2dof
ILC2dof
PD2dof
PD2dof
ILC2dof
PD2dof
PD2dof
PD2dof
ILC2dof
PD2dof
PD2dof
PD2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
PD2dof
PD2dof
PD2dof
PD2dof
PD2dof
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('mtimes')" style="font-weight:bold"> * </a>
Incorrect dimensions for matrix multiplication. Check that the number of columns in the first matrix matches the number of rows in the
second matrix. To perform elementwise multiplication, use '.*'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 143)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',143,0)">line 143</a>)
    xd2_old = pi*(T*x/max(x)); } 
PD2dof
PD2dof
PD2dof
PD2dof
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('horzcat')" style="font-weight:bold">horzcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('PD2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m', 82)" style="font-weight:bold">PD2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\PD2dof.m',82,0)">line 82</a>)
controllo.signals.values = [x1_d,x2_d];} 
PD2dof
PD2dof
PD2dof
PD2dof
PD2dof
ILC2dof
{Undefined function or variable 'x'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 67)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',67,0)">line 67</a>)
    x xd1_old = pi/2*(x/max(x));} 
ILC2dof
PD2dof
PD2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
{Undefined function or variable 'min_err3'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 99)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',99,0)">line 99</a>)
    if(v1_d - uscita.signals.values(:,3))<min_err3} 
PD2dof
ILC2dof
PD2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
PD2dof
ILC2dof
ILC2dof
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\shared\spcuilib\unifiedscopes\+matlabshared\+scopes\+tool\@PlotNavigation\onVisualChanged.m',89,1)">89  </a>    if ~isempty(hSplitAutoscale) && ~isempty(hDynamicAutoscale)
if system_dependent('IsDebugMode')==1, dbquit; end
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\matlab\graphics\+matlab\+graphics\+interaction\InteractionContainer.m',55,1)">55  </a>            e = obj.Enabled_I;
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 54)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',54,0)">line 54</a>)
debug session was interrupted.} 
PD2dof
ILC2dof
PD2dof
ILC2dof
ILC2dof
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('grid', 'C:\Program Files\MATLAB\R2018b\toolbox\matlab\graph2d\grid.m', 153)" style="font-weight:bold">grid</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\matlab\graph2d\grid.m',153,0)">line 153</a>)
Unknown command option.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 96)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',96,0)">line 96</a>)
grid clc} 
opentoline('C:\Program Files\MATLAB\R2018b\toolbox\matlab\graph2d\grid.m',153,0)
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',96,0)
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
PD2dof
ILC2dof
ILC2dof
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\matlab\elmat\flipud.m',14,1)">14  </a>x = flip(x,1);
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\shared\spcuilib\slscopes\+Simulink\+scopes\+source\@WiredSource\WiredSource.m',45,1)">45  </a>            this.TimeToUpdateTextListener = event.listener(this.Application, 'TimeToUpdateText', @this.updateText);
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\matlab\testframework\unittest\core\+matlab\+unittest\+internal\whichFile.m',11,1)">11  </a>end
if system_dependent('IsDebugMode')==1, dbquit; end
if system_dependent('IsDebugMode')==1, dbquit; end
ILC2dof
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('horzcat')" style="font-weight:bold">horzcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 83)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',83,0)">line 83</a>)
controllo.signals.values = [x1_d,x2_d];} 
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2
ILC2
ILC2
ILC2
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\shared\spcuilib\unifiedscopes\+matlabshared\+scopes\+tool\@PlotNavigation\onVisualChanged.m',89,1)">89  </a>    if ~isempty(hSplitAutoscale) && ~isempty(hDynamicAutoscale)
NaN/Inf breakpoint hit for resetLines.m on line 7.
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\shared\spcuilib\unifiedscopes\+matlabshared\+scopes\+visual\@TimeDomainPlotter\resetLines.m',7,1)">7   </a>this.YExtents = [ NaN, NaN; NaN, NaN ];
NaN/Inf breakpoint hit for getDataExtents.m on line 23.
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\shared\spcuilib\unifiedscopes\+matlabshared\+scopes\+visual\@TimeDomainPlotter\getDataExtents.m',23,1)">23  </a>    ylim1 = [ inf, -inf ];
NaN/Inf breakpoint hit for resetLines.m on line 7.
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\shared\spcuilib\unifiedscopes\+matlabshared\+scopes\+visual\@TimeDomainPlotter\resetLines.m',7,1)">7   </a>this.YExtents = [ NaN, NaN; NaN, NaN ];
NaN/Inf breakpoint hit for getDataExtents.m on line 23.
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\shared\spcuilib\unifiedscopes\+matlabshared\+scopes\+visual\@TimeDomainPlotter\getDataExtents.m',23,1)">23  </a>    ylim1 = [ inf, -inf ];
if system_dependent('IsDebugMode')==1, dbquit all; end
if system_dependent('IsDebugMode')==1, dbquit; end
if system_dependent('IsDebugMode')==1, dbquit; end
if system_dependent('IsDebugMode')==1, dbquit; end
if system_dependent('IsDebugMode')==1, dbquit; end
if system_dependent('IsDebugMode')==1, dbcont; end
if system_dependent('IsDebugMode')==1, dbcont; end
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\matlab\graphics\+matlab\+graphics\+interaction\InteractionContainer.m',55,1)">55  </a>            e = obj.Enabled_I;
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2.m', 164)" style="font-weight:bold">ILC2</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2.m',164,0)">line 164</a>)
Program interruption (Ctrl-C) has been detected.} 
equazioni di Lagrange del sistema dinamico

prima equazione
tau1
teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)

seconda equazione
tau2
teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

in forma matriciale/vettoriale
 teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)
                                                                                                                                       teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

con i dati del manipolatore
 (49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 + teta1_dot_dot*(cos(teta2) + 5/3) - (teta2_dot^2*sin(teta2))/2 + teta2_dot_dot*(cos(teta2)/2 + 1/3) - teta1_dot*teta2_dot*sin(teta2)
                                                                         (sin(teta2)*teta1_dot^2)/2 + teta2_dot_dot/3 + (49*cos(teta1 + teta2))/10 + teta1_dot_dot*(cos(teta2)/2 + 1/3)
scrivo il sistema nella forma: B(q)*q_dot_dot + C(q,q_dot)*q_dot + g(q) = tau

matrice B(q) dei termini inerziali

[ M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O, J2A + M2*b2*l1*cos(teta2)]
[                   J2A + M2*b2*l1*cos(teta2),                       J2A]

vettore delle accelerazioni angolari q_dot_dot

 teta1_dot_dot
 teta2_dot_dot

matrice C(q,q_dot) dei termini centrifughi e di coriolis

[ -2*M2*b2*l1*teta2_dot*sin(teta2), -M2*b2*l1*teta2_dot*sin(teta2)]
[    M2*b2*l1*teta1_dot*sin(teta2),                              0]
vettore delle velocità angolari q_dot

 teta1_dot
 teta2_dot

vettore g(q) dei termini gravitazionali


 M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)
                                         M2*ag*b2*cos(teta1 + teta2)

spazio di stato

vettore z2_dot

                                                                                     ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)
 ((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta1_dot_dot
((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta2_dot_dot
((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)


 tau1
 tau2
variabile di stato x1_dot

teta1_dot

variabile di stato x2_dot

teta2_dot

variabile di stato x3_dot

((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

variabile di stato x4_dot

((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

matrice A_ss



[                                           (J2A*(M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*ag*b2*sin(teta1 + teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                                                                                                                                                                                                                                                                                                                                                                                                                                                             (J2A*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*J2A*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*J2A*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2,                                             (2*M2*b2*l1*teta1_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*J2A*M2*b2*l1*teta2_dot*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                          (J2A*(2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ (M2*ag*b2*sin(teta1 + teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((J2A + M2*b2*l1*cos(teta2))*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau1_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2, - (2*M2*b2*l1*teta2_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*teta1_dot*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), -((2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice B_ss

[                                                                                  0,                                                                                                   0]
[                                                                                  0,                                                                                                   0]
[                          J2A/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                  -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), (M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss con i dati inseriti



[                       (49*sin(teta1 + teta2)*(cos(teta2)/2 + 1/3))/(10*(cos(teta2)^2/4 - 4/9)) - ((49*sin(teta1 + teta2))/30 + (49*sin(teta1))/10)/(cos(teta2)^2/4 - 4/9),                                                                                                                                                                                                                                                             (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)) - (tau2_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - ((cos(teta2)*teta2_dot^2)/6 + (teta1_dot*cos(teta2)*teta2_dot)/3 + (49*sin(teta1 + teta2))/30)/(cos(teta2)^2/4 - 4/9) + (((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9) + (cos(teta2)*sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(6*(cos(teta2)^2/4 - 4/9)^2) - (tau1_ss*cos(teta2)*sin(teta2))/(6*(cos(teta2)^2/4 - 4/9)^2) + (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2),              - (teta2_dot*sin(teta2))/(3*(cos(teta2)^2/4 - 4/9)) - (teta1_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9),               -((teta1_dot*sin(teta2))/3 + (teta2_dot*sin(teta2))/3)/(cos(teta2)^2/4 - 4/9)]
[ ((cos(teta2)/2 + 1/3)*((49*sin(teta1 + teta2))/10 + (147*sin(teta1))/10))/(cos(teta2)^2/4 - 4/9) - (49*sin(teta1 + teta2)*(cos(teta2) + 5/3))/(10*(cos(teta2)^2/4 - 4/9)), (tau2_ss*sin(teta2))/(cos(teta2)^2/4 - 4/9) - (tau1_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - ((cos(teta2) + 5/3)*((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2))/(cos(teta2)^2/4 - 4/9) + (sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)) + ((cos(teta2)/2 + 1/3)*((cos(teta2)*teta2_dot^2)/2 + teta1_dot*cos(teta2)*teta2_dot + (49*sin(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2) + 5/3))/(2*(cos(teta2)^2/4 - 4/9)^2) + (cos(teta2)*sin(teta2)*(cos(teta2) + 5/3)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)^2) + (tau1_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)^2), (teta1_dot*sin(teta2)*(cos(teta2) + 5/3))/(cos(teta2)^2/4 - 4/9) + (teta2_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9), ((cos(teta2)/2 + 1/3)*(teta1_dot*sin(teta2) + teta2_dot*sin(teta2)))/(cos(teta2)^2/4 - 4/9)]

matrice B_ss con i dati inseriti

[                                           0,                                           0]
[                                           0,                                           0]
[               -1/(3*(cos(teta2)^2/4 - 4/9)), (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9)]
[ (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9),  -(cos(teta2) + 5/3)/(cos(teta2)^2/4 - 4/9)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss valutata nel punto di equilibrio

         0         0    1.0000         0
         0         0         0    1.0000
    0.0000   -0.0000         0         0
   -0.0000    0.0000         0         0

matrice B_ss valutata nel punto di equilibrio

         0         0
         0         0
    1.7143   -4.2857
   -4.2857   13.7143

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('plus')" style="font-weight:bold"> + </a>
Matrix dimensions must agree.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title({'MOTO DEL MANIPOLATORE (ILC)';'blu: manipolatore di riferimento nero: manipolatore controllato con ILC'; 'verde: traiettoria
    desiderata rosso: traiettoria '+c+' ottenuta';'ciano: traiettoria '+m+'-esima iterazione'})} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title({'MOTO DEL MANIPOLATORE (ILC)';'blu: manipolatore di riferimento nero: manipolatore controllato con ILC'; 'verde: traiettoria
    desiderata rosso: traiettoria ',num2str(c),' ottenuta';'ciano: traiettoria ',num2str(m),'-esima iterazione'})} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title({'MOTO DEL MANIPOLATORE (ILC)';'blu: manipolatore di riferimento nero: manipolatore controllato con ILC'; 'verde: traiettoria
    desiderata rosso: traiettoria ' num2str(c) ' ottenuta';'ciano: traiettoria ' num2str(m) '-esima iterazione'})} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title({['MOTO DEL MANIPOLATORE (ILC)';'blu: manipolatore di riferimento nero: manipolatore controllato con ILC'; 'verde: traiettoria
    desiderata rosso: traiettoria ' num2str(c) ' ottenuta';'ciano: traiettoria ' num2str(m) '-esima iterazione']})} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title(['MOTO DEL MANIPOLATORE (ILC)';'blu: manipolatore di riferimento nero: manipolatore controllato con ILC'; 'verde: traiettoria
    desiderata rosso: traiettoria ' num2str(c) ' ottenuta';'ciano: traiettoria ' num2str(m) '-esima iterazione'])} 
ILC2dof
m =
     5
ILC2dof
m =
     5
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('plot')" style="font-weight:bold">plot</a>
Invalid data argument.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 354)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',354,0)">line 354</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'k','DisplayName','ILC',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') %
    manipolatore uscita} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('plot')" style="font-weight:bold">plot</a>
Invalid data argument.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 354)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',354,0)">line 354</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'DisplayName','ILC','k',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') %
    manipolatore uscita} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('plot')" style="font-weight:bold">plot</a>
Invalid data argument.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 354)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',354,0)">line 354</a>)
    plot([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))],'DisplayName','ILC',[0 x1(j(i))],[0 y1(j(i))],'k',[0 x1(j(i))],[0 y1(j(i))],'o') %
    manipolatore uscita} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('legend', 'C:\Program Files\MATLAB\R2018b\toolbox\matlab\scribe\legend.p', 167)" style="font-weight:bold">legend</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\matlab\scribe\legend.p',167,0)">line 167</a>)
Handle inputs of type double cannot be used with this function.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 355)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',355,0)">line 355</a>)
    lgd=legend([x1(j(i)) x2(j(i))],[y1(j(i)) y2(j(i))]);} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title(['MOTO DEL MANIPOLATORE (ILC)';' blu: manipolatore di riferimento';' nero: manipolatore controllato con ILC';' verde:
    traiettoria desiderata';' rosso: traiettoria ' num2str(c) ' ottenuta';' ciano: traiettoria ' num2str(m) '-esima iterazione'])} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title(['MOTO DEL MANIPOLATORE (ILC)';' blu: manipolatore di riferimento';' nero: manipolatore controllato con ILC';' verde:
    traiettoria desiderata';' rosso: traiettoria ', [c], ' ottenuta';' ciano: traiettoria ', [m], '-esima iterazione'])} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title(['MOTO DEL MANIPOLATORE (ILC)',' blu: manipolatore di riferimento',' nero: manipolatore controllato con ILC';' verde:
    traiettoria desiderata';' rosso: traiettoria ', [c], ' ottenuta',' ciano: traiettoria ', [m], '-esima iterazione'])} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title(['MOTO DEL MANIPOLATORE (ILC)',' blu: manipolatore di riferimento',' nero: manipolatore controllato con ILC',' verde:
    traiettoria desiderata';' rosso: traiettoria ', [c], ' ottenuta',' ciano: traiettoria ', [m], '-esima iterazione'])} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title(['MOTO DEL MANIPOLATORE (ILC)';' blu: manipolatore di riferimento';' nero: manipolatore controllato con ILC';' verde:
    traiettoria desiderata';' rosso: traiettoria '; [c]; ' ottenuta',' ciano: traiettoria '; [m]; '-esima iterazione'])} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title({'MOTO DEL MANIPOLATORE (ILC)';' blu: manipolatore di riferimento';' nero: manipolatore controllato con ILC';' verde:
    traiettoria desiderata';' rosso: traiettoria '; c ; ' ottenuta',' ciano: traiettoria '; m ; '-esima iterazione'})} 
ILC2dof
m =
     5
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title({'MOTO DEL MANIPOLATORE (ILC)';' blu: manipolatore di riferimento';' nero: manipolatore controllato con ILC';' verde:
    traiettoria desiderata';' rosso: traiettoria ' c  ' ottenuta';' ciano: traiettoria ' m  '-esima iterazione'})} 
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 366)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',366,0)">line 366</a>)
    title({'MOTO DEL MANIPOLATORE (ILC)';' BLU: manipolatore di riferimento';' NERO: manipolatore controllato con ILC';' VERDE:
    traiettoria desiderata';' ROSSO: traiettoria ' num2str(c) ' ottenuta';' CIANO: traiettoria ' num2str(m)  ' iterazione'})} 
ILC2dof
m =
     5
ILC2dof
m =
     5
ILC2dof
m =
     5
ILC2dof
m =
     5
ILC2dof
m =
     5
ILC2dof
m =
     5
ILC2dof
m =
     5
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('plot')" style="font-weight:bold">plot</a>
'-' is not a valid value. Use one of these values: '+' | 'o' | '*' | '.' | 'x' | 'square' | 'diamond' | 'v' | '^' | '>' | '<' |
'pentagram' | 'hexagram' | 'none'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 378)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',378,0)">line 378</a>)
       p1= plot(x2d(j(k)),y2d(j(k)),'Color','g','Marker','-');        %traiettoria end-effector desiderata } 
ILC2dof
<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\matlab\general\pwd.m',11,1)">11  </a>wd =  cd;
m =
     5
{Undefined function or variable 'lebend'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 383)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',383,0)">line 383</a>)
    legend('boxoff');} 
ILC2dof
m =
     5
ILC2dof
m =
     5
p1 = 
  3×1 <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> array:

  Line
  Line
  Line
p2 = 
  3×1 <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> array:

  Line
  Line
  Line
{Operands to the || and && operators must be convertible to logical scalar values.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('legend', 'C:\Program Files\MATLAB\R2018b\toolbox\matlab\scribe\legend.p', 162)" style="font-weight:bold">legend</a> (<a href="matlab: opentoline('C:\Program Files\MATLAB\R2018b\toolbox\matlab\scribe\legend.p',162,0)">line 162</a>)
        all(isgraphics(args{1})) % legend(children,strings,...)
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 357)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',357,0)">line 357</a>)
    legend([p1 p2], {'Robot ILC','Robot Ideale'});} 
ILC2dof
m =
     5
p1 = 
  3×1 <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> array:

  Line
  Line
  Line
p2 = 
  3×1 <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> array:

  Line
  Line
  Line
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('horzcat')" style="font-weight:bold">horzcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 382)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',382,0)">line 382</a>)
    legend([p1 p2 p3 p4 p5],{'Robot ILC','Robot Ideale','Ideale','Ottenuta',strcat(num2str(m),' Iterazione')});} 
ILC2dof
m =
     5
ILC2dof
{Error: <a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',382,97)">File: ILC2dof.m Line: 382 Column: 97
</a>Invalid expression. When calling a function or indexing a variable, use parentheses. Otherwise, check for mismatched delimiters.} 
ILC2dof
m =
     5
ILC2dof
{Undefined function or variable 'p3'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 136)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',136,0)">line 136</a>)
p3=legend(p3,{'Desiderato'});} 
ILC2dof
m =
     5
ILC2dof
m =
     5
ILC2dof
p8 = 
  <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> with properties:

              Color: [0.8500 0.3250 0.0980]
          LineStyle: '-'
          LineWidth: 0.5000
             Marker: 'none'
         MarkerSize: 6
    MarkerFaceColor: 'none'
              XData: [1×201 double]
              YData: [1×201 double]
              ZData: [1×0 double]

  Show <a href="matlab:if exist('p8', 'var'), matlab.graphics.internal.getForDisplay('p8', p8, 'matlab.graphics.chart.primitive.Line'), else, matlab.graphics.internal.getForDisplay('p8'), end">all properties</a>
p8 = 
  <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> with properties:

              Color: [0.9290 0.6940 0.1250]
          LineStyle: '-'
          LineWidth: 0.5000
             Marker: 'none'
         MarkerSize: 6
    MarkerFaceColor: 'none'
              XData: [1×201 double]
              YData: [1×201 double]
              ZData: [1×0 double]

  Show <a href="matlab:if exist('p8', 'var'), matlab.graphics.internal.getForDisplay('p8', p8, 'matlab.graphics.chart.primitive.Line'), else, matlab.graphics.internal.getForDisplay('p8'), end">all properties</a>
p8 = 
  <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> with properties:

              Color: [0.4940 0.1840 0.5560]
          LineStyle: '-'
          LineWidth: 0.5000
             Marker: 'none'
         MarkerSize: 6
    MarkerFaceColor: 'none'
              XData: [1×201 double]
              YData: [1×201 double]
              ZData: [1×0 double]

  Show <a href="matlab:if exist('p8', 'var'), matlab.graphics.internal.getForDisplay('p8', p8, 'matlab.graphics.chart.primitive.Line'), else, matlab.graphics.internal.getForDisplay('p8'), end">all properties</a>
m =
     5
p8 = 
  <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> with properties:

              Color: [0.4660 0.6740 0.1880]
          LineStyle: '-'
          LineWidth: 0.5000
             Marker: 'none'
         MarkerSize: 6
    MarkerFaceColor: 'none'
              XData: [1×201 double]
              YData: [1×201 double]
              ZData: [1×0 double]

  Show <a href="matlab:if exist('p8', 'var'), matlab.graphics.internal.getForDisplay('p8', p8, 'matlab.graphics.chart.primitive.Line'), else, matlab.graphics.internal.getForDisplay('p8'), end">all properties</a>
p8 = 
  <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> with properties:

              Color: [0.3010 0.7450 0.9330]
          LineStyle: '-'
          LineWidth: 0.5000
             Marker: 'none'
         MarkerSize: 6
    MarkerFaceColor: 'none'
              XData: [1×201 double]
              YData: [1×201 double]
              ZData: [1×0 double]

  Show <a href="matlab:if exist('p8', 'var'), matlab.graphics.internal.getForDisplay('p8', p8, 'matlab.graphics.chart.primitive.Line'), else, matlab.graphics.internal.getForDisplay('p8'), end">all properties</a>
p8 = 
  <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> with properties:

              Color: [0.6350 0.0780 0.1840]
          LineStyle: '-'
          LineWidth: 0.5000
             Marker: 'none'
         MarkerSize: 6
    MarkerFaceColor: 'none'
              XData: [1×201 double]
              YData: [1×201 double]
              ZData: [1×0 double]

  Show <a href="matlab:if exist('p8', 'var'), matlab.graphics.internal.getForDisplay('p8', p8, 'matlab.graphics.chart.primitive.Line'), else, matlab.graphics.internal.getForDisplay('p8'), end">all properties</a>
p8 = 
  <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> with properties:

              Color: [0 0.4470 0.7410]
          LineStyle: '-'
          LineWidth: 0.5000
             Marker: 'none'
         MarkerSize: 6
    MarkerFaceColor: 'none'
              XData: [1×201 double]
              YData: [1×201 double]
              ZData: [1×0 double]

  Show <a href="matlab:if exist('p8', 'var'), matlab.graphics.internal.getForDisplay('p8', p8, 'matlab.graphics.chart.primitive.Line'), else, matlab.graphics.internal.getForDisplay('p8'), end">all properties</a>
p8 = 
  <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> with properties:

              Color: [0.8500 0.3250 0.0980]
          LineStyle: '-'
          LineWidth: 0.5000
             Marker: 'none'
         MarkerSize: 6
    MarkerFaceColor: 'none'
              XData: [1×201 double]
              YData: [1×201 double]
              ZData: [1×0 double]

  Show <a href="matlab:if exist('p8', 'var'), matlab.graphics.internal.getForDisplay('p8', p8, 'matlab.graphics.chart.primitive.Line'), else, matlab.graphics.internal.getForDisplay('p8'), end">all properties</a>
p8 = 
  <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> with properties:

              Color: [0.9290 0.6940 0.1250]
          LineStyle: '-'
          LineWidth: 0.5000
             Marker: 'none'
         MarkerSize: 6
    MarkerFaceColor: 'none'
              XData: [1×201 double]
              YData: [1×201 double]
              ZData: [1×0 double]

  Show <a href="matlab:if exist('p8', 'var'), matlab.graphics.internal.getForDisplay('p8', p8, 'matlab.graphics.chart.primitive.Line'), else, matlab.graphics.internal.getForDisplay('p8'), end">all properties</a>
p8 = 
  <a href="matlab:helpPopup matlab.graphics.chart.primitive.Line" style="font-weight:bold">Line</a> with properties:

              Color: [0.4940 0.1840 0.5560]
          LineStyle: '-'
          LineWidth: 0.5000
             Marker: 'none'
         MarkerSize: 6
    MarkerFaceColor: 'none'
              XData: [1×201 double]
              YData: [1×201 double]
              ZData: [1×0 double]

  Show <a href="matlab:if exist('p8', 'var'), matlab.graphics.internal.getForDisplay('p8', p8, 'matlab.graphics.chart.primitive.Line'), else, matlab.graphics.internal.getForDisplay('p8'), end">all properties</a>
ILC2dof
m =
     5
ILC2dof
m =
     5
ILC2dof
{Error using <a href="matlab:matlab.internal.language.introspective.errorDocCallback('vertcat')" style="font-weight:bold">vertcat</a>
Dimensions of arrays being concatenated are not consistent.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 300)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',300,0)">line 300</a>)
title({'ERRORE DI POSIZIONE LINK 1 (ILC)';'Valore massimo ' strcat(num2str(c),' iterazione')})} 
ILC2dof
m =
     5
ILC2dof
m =
     5
manipulator2dof
EQUAZIONI DI LAGRANDGE DEL SISTEMA DINAMICO

Prima equazione:
tau1
teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)

Seconda equazione:
tau2
teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

Forma matriciale/vettoriale:
 teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)
                                                                                                                                       teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

con i dati del manipolatore
 (49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 + teta1_dot_dot*(cos(teta2) + 5/3) - (teta2_dot^2*sin(teta2))/2 + teta2_dot_dot*(cos(teta2)/2 + 1/3) - teta1_dot*teta2_dot*sin(teta2)
                                                                         (sin(teta2)*teta1_dot^2)/2 + teta2_dot_dot/3 + (49*cos(teta1 + teta2))/10 + teta1_dot_dot*(cos(teta2)/2 + 1/3)
scrivo il sistema nella forma: B(q)*q_dot_dot + C(q,q_dot)*q_dot + g(q) = tau

matrice B(q) dei termini inerziali

[ M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O, J2A + M2*b2*l1*cos(teta2)]
[                   J2A + M2*b2*l1*cos(teta2),                       J2A]

vettore delle accelerazioni angolari q_dot_dot

 teta1_dot_dot
 teta2_dot_dot

matrice C(q,q_dot) dei termini centrifughi e di coriolis

[ -2*M2*b2*l1*teta2_dot*sin(teta2), -M2*b2*l1*teta2_dot*sin(teta2)]
[    M2*b2*l1*teta1_dot*sin(teta2),                              0]
vettore delle velocità angolari q_dot

 teta1_dot
 teta2_dot

vettore g(q) dei termini gravitazionali


 M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)
                                         M2*ag*b2*cos(teta1 + teta2)

spazio di stato

vettore z2_dot

                                                                                     ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)
 ((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta1_dot_dot
((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta2_dot_dot
((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)


 tau1
 tau2
variabile di stato x1_dot

teta1_dot

variabile di stato x2_dot

teta2_dot

variabile di stato x3_dot

((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

variabile di stato x4_dot

((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

matrice A_ss

[                                                                                                                                                                                                                                                                                             0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         0,                                                                                                                                                                                                                                                             1,                                                                                                                                                        0]

[                                           (J2A*(M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*ag*b2*sin(teta1 + teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                                                                                                                                                                                                                                                                                                                                                                                                                                                             (J2A*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*J2A*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*J2A*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2,                                             (2*M2*b2*l1*teta1_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*J2A*M2*b2*l1*teta2_dot*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                          (J2A*(2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ (M2*ag*b2*sin(teta1 + teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((J2A + M2*b2*l1*cos(teta2))*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau1_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2, - (2*M2*b2*l1*teta2_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*teta1_dot*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), -((2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice B_ss

[                                                                                  0,                                                                                                   0]
[                                                                                  0,                                                                                                   0]
[                          J2A/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                  -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), (M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss con i dati inseriti


[                                                                                                                                                                         0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  0,                                                                                                                                     0,                                                                                           1]
[                       (49*sin(teta1 + teta2)*(cos(teta2)/2 + 1/3))/(10*(cos(teta2)^2/4 - 4/9)) - ((49*sin(teta1 + teta2))/30 + (49*sin(teta1))/10)/(cos(teta2)^2/4 - 4/9),                                                                                                                                                                                                                                                             (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)) - (tau2_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - ((cos(teta2)*teta2_dot^2)/6 + (teta1_dot*cos(teta2)*teta2_dot)/3 + (49*sin(teta1 + teta2))/30)/(cos(teta2)^2/4 - 4/9) + (((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9) + (cos(teta2)*sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(6*(cos(teta2)^2/4 - 4/9)^2) - (tau1_ss*cos(teta2)*sin(teta2))/(6*(cos(teta2)^2/4 - 4/9)^2) + (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2),              - (teta2_dot*sin(teta2))/(3*(cos(teta2)^2/4 - 4/9)) - (teta1_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9),               -((teta1_dot*sin(teta2))/3 + (teta2_dot*sin(teta2))/3)/(cos(teta2)^2/4 - 4/9)]
[ ((cos(teta2)/2 + 1/3)*((49*sin(teta1 + teta2))/10 + (147*sin(teta1))/10))/(cos(teta2)^2/4 - 4/9) - (49*sin(teta1 + teta2)*(cos(teta2) + 5/3))/(10*(cos(teta2)^2/4 - 4/9)), (tau2_ss*sin(teta2))/(cos(teta2)^2/4 - 4/9) - (tau1_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - ((cos(teta2) + 5/3)*((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2))/(cos(teta2)^2/4 - 4/9) + (sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)) + ((cos(teta2)/2 + 1/3)*((cos(teta2)*teta2_dot^2)/2 + teta1_dot*cos(teta2)*teta2_dot + (49*sin(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2) + 5/3))/(2*(cos(teta2)^2/4 - 4/9)^2) + (cos(teta2)*sin(teta2)*(cos(teta2) + 5/3)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)^2) + (tau1_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)^2), (teta1_dot*sin(teta2)*(cos(teta2) + 5/3))/(cos(teta2)^2/4 - 4/9) + (teta2_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9), ((cos(teta2)/2 + 1/3)*(teta1_dot*sin(teta2) + teta2_dot*sin(teta2)))/(cos(teta2)^2/4 - 4/9)]

matrice B_ss con i dati inseriti

[                                           0,                                           0]
[                                           0,                                           0]
[               -1/(3*(cos(teta2)^2/4 - 4/9)), (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9)]
[ (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9),  -(cos(teta2) + 5/3)/(cos(teta2)^2/4 - 4/9)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss valutata nel punto di equilibrio

         0         0    1.0000         0
         0         0         0    1.0000
    0.0000   -0.0000         0         0
   -0.0000    0.0000         0         0

matrice B_ss valutata nel punto di equilibrio

         0         0
         0         0
    1.7143   -4.2857
   -4.2857   13.7143

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

manipulator2dof
EQUAZIONI DI LAGRANDGE DEL SISTEMA DINAMICO

Prima equazione:
tau1
teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)

Seconda equazione:
tau2
teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

Forma vettoriale:
 teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)
                                                                                                                                       teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

Sostituendo i dati del manipolatore:
 (49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 + teta1_dot_dot*(cos(teta2) + 5/3) - (teta2_dot^2*sin(teta2))/2 + teta2_dot_dot*(cos(teta2)/2 + 1/3) - teta1_dot*teta2_dot*sin(teta2)
                                                                         (sin(teta2)*teta1_dot^2)/2 + teta2_dot_dot/3 + (49*cos(teta1 + teta2))/10 + teta1_dot_dot*(cos(teta2)/2 + 1/3)
Scrivo il sistema nella forma: B(q)*q_dot_dot + C(q,q_dot)*q_dot + g(q) = tau

Matrice B(q) dei termini inerziali:

[ M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O, J2A + M2*b2*l1*cos(teta2)]
[                   J2A + M2*b2*l1*cos(teta2),                       J2A]

vettore delle accelerazioni angolari q_dot_dot

 teta1_dot_dot
 teta2_dot_dot

matrice C(q,q_dot) dei termini centrifughi e di coriolis

[ -2*M2*b2*l1*teta2_dot*sin(teta2), -M2*b2*l1*teta2_dot*sin(teta2)]
[    M2*b2*l1*teta1_dot*sin(teta2),                              0]
vettore delle velocità angolari q_dot

 teta1_dot
 teta2_dot

vettore g(q) dei termini gravitazionali


 M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)
                                         M2*ag*b2*cos(teta1 + teta2)

spazio di stato

vettore z2_dot

                                                                                     ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)
 ((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta1_dot_dot
((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

teta2_dot_dot
((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)


 tau1
 tau2
variabile di stato x1_dot

teta1_dot

variabile di stato x2_dot

teta2_dot

variabile di stato x3_dot

((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

variabile di stato x4_dot

((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

matrice A_ss



[                                           (J2A*(M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*ag*b2*sin(teta1 + teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                                                                                                                                                                                                                                                                                                                                                                                                                                                             (J2A*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*J2A*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*J2A*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2,                                             (2*M2*b2*l1*teta1_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*J2A*M2*b2*l1*teta2_dot*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                          (J2A*(2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ (M2*ag*b2*sin(teta1 + teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((J2A + M2*b2*l1*cos(teta2))*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau1_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2, - (2*M2*b2*l1*teta2_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*teta1_dot*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), -((2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice B_ss

[                                                                                  0,                                                                                                   0]
[                                                                                  0,                                                                                                   0]
[                          J2A/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                  -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), (M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss con i dati inseriti


[                                                                                                                                                                         0,                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  0,                                                                                                                                     0,                                                                                           1]
[                       (49*sin(teta1 + teta2)*(cos(teta2)/2 + 1/3))/(10*(cos(teta2)^2/4 - 4/9)) - ((49*sin(teta1 + teta2))/30 + (49*sin(teta1))/10)/(cos(teta2)^2/4 - 4/9),                                                                                                                                                                                                                                                             (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)) - (tau2_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - ((cos(teta2)*teta2_dot^2)/6 + (teta1_dot*cos(teta2)*teta2_dot)/3 + (49*sin(teta1 + teta2))/30)/(cos(teta2)^2/4 - 4/9) + (((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9) + (cos(teta2)*sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(6*(cos(teta2)^2/4 - 4/9)^2) - (tau1_ss*cos(teta2)*sin(teta2))/(6*(cos(teta2)^2/4 - 4/9)^2) + (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2),              - (teta2_dot*sin(teta2))/(3*(cos(teta2)^2/4 - 4/9)) - (teta1_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9),               -((teta1_dot*sin(teta2))/3 + (teta2_dot*sin(teta2))/3)/(cos(teta2)^2/4 - 4/9)]
[ ((cos(teta2)/2 + 1/3)*((49*sin(teta1 + teta2))/10 + (147*sin(teta1))/10))/(cos(teta2)^2/4 - 4/9) - (49*sin(teta1 + teta2)*(cos(teta2) + 5/3))/(10*(cos(teta2)^2/4 - 4/9)), (tau2_ss*sin(teta2))/(cos(teta2)^2/4 - 4/9) - (tau1_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - ((cos(teta2) + 5/3)*((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2))/(cos(teta2)^2/4 - 4/9) + (sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)) + ((cos(teta2)/2 + 1/3)*((cos(teta2)*teta2_dot^2)/2 + teta1_dot*cos(teta2)*teta2_dot + (49*sin(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2) + 5/3))/(2*(cos(teta2)^2/4 - 4/9)^2) + (cos(teta2)*sin(teta2)*(cos(teta2) + 5/3)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)^2) + (tau1_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)^2), (teta1_dot*sin(teta2)*(cos(teta2) + 5/3))/(cos(teta2)^2/4 - 4/9) + (teta2_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9), ((cos(teta2)/2 + 1/3)*(teta1_dot*sin(teta2) + teta2_dot*sin(teta2)))/(cos(teta2)^2/4 - 4/9)]

matrice B_ss con i dati inseriti

[                                           0,                                           0]
[                                           0,                                           0]
[               -1/(3*(cos(teta2)^2/4 - 4/9)), (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9)]
[ (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9),  -(cos(teta2) + 5/3)/(cos(teta2)^2/4 - 4/9)]

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

matrice A_ss valutata nel punto di equilibrio

         0         0    1.0000         0
         0         0         0    1.0000
    0.0000   -0.0000         0         0
   -0.0000    0.0000         0         0

matrice B_ss valutata nel punto di equilibrio

         0         0
         0         0
    1.7143   -4.2857
   -4.2857   13.7143

matrice C_ss

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

matrice D_ss

     0     0
     0     0
     0     0
     0     0

manipulator2dof
EQUAZIONI DI LAGRANDGE DEL SISTEMA DINAMICO

Prima equazione:
tau1
teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)

Seconda equazione:
tau2
teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

Forma vettoriale:
 teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)
                                                                                                                                       teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

Sostituendo i dati del manipolatore:
 (49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 + teta1_dot_dot*(cos(teta2) + 5/3) - (teta2_dot^2*sin(teta2))/2 + teta2_dot_dot*(cos(teta2)/2 + 1/3) - teta1_dot*teta2_dot*sin(teta2)
                                                                         (sin(teta2)*teta1_dot^2)/2 + teta2_dot_dot/3 + (49*cos(teta1 + teta2))/10 + teta1_dot_dot*(cos(teta2)/2 + 1/3)
Scrivo il sistema nella forma: B(q)*q_dot_dot + C(q,q_dot)*q_dot + g(q) = tau

Matrice B(q) dei termini inerziali:

[ M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O, J2A + M2*b2*l1*cos(teta2)]
[                   J2A + M2*b2*l1*cos(teta2),                       J2A]

Vettore delle accelerazioni angolari q_dot_dot:

 teta1_dot_dot
 teta2_dot_dot

Matrice C(q,q_dot) dei termini centrifughi e di Coriolis:

[ -2*M2*b2*l1*teta2_dot*sin(teta2), -M2*b2*l1*teta2_dot*sin(teta2)]
[    M2*b2*l1*teta1_dot*sin(teta2),                              0]
Vettore delle velocità angolari q_dot:

 teta1_dot
 teta2_dot

Vettore g(q) dei termini gravitazionali:


 M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)
                                         M2*ag*b2*cos(teta1 + teta2)

SPAZIO DI STATO

Vettore z2_dot:

                                                                                     ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)
 ((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

Teta1_dot_dot:
((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

Teta2_dot_dot:
((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)


 tau1
 tau2
Variabile di stato x1_dot:

teta1_dot

Variabile di stato x2_dot:

teta2_dot

Variabile di stato x3_dot:

((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

Variabile di stato x4_dot:

((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

MATRICI SPAZIO DI STATO
Matrice A (matrice dinamica del sistema ):



[                                           (J2A*(M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*ag*b2*sin(teta1 + teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                                                                                                                                                                                                                                                                                                                                                                                                                                                             (J2A*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*J2A*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*J2A*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2,                                             (2*M2*b2*l1*teta1_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*J2A*M2*b2*l1*teta2_dot*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                          (J2A*(2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ (M2*ag*b2*sin(teta1 + teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((J2A + M2*b2*l1*cos(teta2))*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau1_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2, - (2*M2*b2*l1*teta2_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*teta1_dot*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), -((2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

Matrice B (matrice ingresso del sistema ):

[                                                                                  0,                                                                                                   0]
[                                                                                  0,                                                                                                   0]
[                          J2A/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                  -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), (M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

Matrice C (matrice di uscita del sistema ):

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

Matrice D (matrice ingresso-uscita):

     0     0
     0     0
     0     0
     0     0

Matrice A con i valori:



[                       (49*sin(teta1 + teta2)*(cos(teta2)/2 + 1/3))/(10*(cos(teta2)^2/4 - 4/9)) - ((49*sin(teta1 + teta2))/30 + (49*sin(teta1))/10)/(cos(teta2)^2/4 - 4/9),                                                                                                                                                                                                                                                             (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)) - (tau2_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - ((cos(teta2)*teta2_dot^2)/6 + (teta1_dot*cos(teta2)*teta2_dot)/3 + (49*sin(teta1 + teta2))/30)/(cos(teta2)^2/4 - 4/9) + (((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9) + (cos(teta2)*sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(6*(cos(teta2)^2/4 - 4/9)^2) - (tau1_ss*cos(teta2)*sin(teta2))/(6*(cos(teta2)^2/4 - 4/9)^2) + (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2),              - (teta2_dot*sin(teta2))/(3*(cos(teta2)^2/4 - 4/9)) - (teta1_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9),               -((teta1_dot*sin(teta2))/3 + (teta2_dot*sin(teta2))/3)/(cos(teta2)^2/4 - 4/9)]
[ ((cos(teta2)/2 + 1/3)*((49*sin(teta1 + teta2))/10 + (147*sin(teta1))/10))/(cos(teta2)^2/4 - 4/9) - (49*sin(teta1 + teta2)*(cos(teta2) + 5/3))/(10*(cos(teta2)^2/4 - 4/9)), (tau2_ss*sin(teta2))/(cos(teta2)^2/4 - 4/9) - (tau1_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - ((cos(teta2) + 5/3)*((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2))/(cos(teta2)^2/4 - 4/9) + (sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)) + ((cos(teta2)/2 + 1/3)*((cos(teta2)*teta2_dot^2)/2 + teta1_dot*cos(teta2)*teta2_dot + (49*sin(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2) + 5/3))/(2*(cos(teta2)^2/4 - 4/9)^2) + (cos(teta2)*sin(teta2)*(cos(teta2) + 5/3)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)^2) + (tau1_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)^2), (teta1_dot*sin(teta2)*(cos(teta2) + 5/3))/(cos(teta2)^2/4 - 4/9) + (teta2_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9), ((cos(teta2)/2 + 1/3)*(teta1_dot*sin(teta2) + teta2_dot*sin(teta2)))/(cos(teta2)^2/4 - 4/9)]

Matrice B con i valori:

[                                           0,                                           0]
[                                           0,                                           0]
[               -1/(3*(cos(teta2)^2/4 - 4/9)), (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9)]
[ (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9),  -(cos(teta2) + 5/3)/(cos(teta2)^2/4 - 4/9)]

Matrice C con i valori:

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

Matrice D con i valori:

     0     0
     0     0
     0     0
     0     0

LINEARIZZAZIONE ATTORNO AL PUNTO DI EQUILIBRIO STATICO
Matrice A valutata nel punto di equilibrio:

         0         0    1.0000         0
         0         0         0    1.0000
    0.0000   -0.0000         0         0
   -0.0000    0.0000         0         0

Matrice B valutata nel punto di equilibrio:

         0         0
         0         0
    1.7143   -4.2857
   -4.2857   13.7143

Matrice C valutata nel punto di equilibrio:

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

Matrice D valutata nel punto di equilibrio:

     0     0
     0     0
     0     0
     0     0

ILC2dof
ILC2dof
manipulator2dof
EQUAZIONI DI LAGRANDGE DEL SISTEMA DINAMICO

Prima equazione:
tau1
teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)

Seconda equazione:
tau2
teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

Forma vettoriale:
 teta2_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + teta1_dot_dot*((M1*l1^2)/3 + M2*l1^2 + (M2*l2^2)/3 + M2*l1*l2*cos(teta2)) + M2*ag*((l2*cos(teta1 + teta2))/2 + l1*cos(teta1)) + (M1*ag*l1*cos(teta1))/2 - (M2*l1*l2*teta2_dot^2*sin(teta2))/2 - M2*l1*l2*teta1_dot*teta2_dot*sin(teta2)
                                                                                                                                       teta1_dot_dot*((M2*l2^2)/3 + (M2*l1*cos(teta2)*l2)/2) + (M2*l2^2*teta2_dot_dot)/3 + (M2*ag*l2*cos(teta1 + teta2))/2 + (M2*l1*l2*teta1_dot^2*sin(teta2))/2

Sostituendo i dati del manipolatore:
 (49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 + teta1_dot_dot*(cos(teta2) + 5/3) - (teta2_dot^2*sin(teta2))/2 + teta2_dot_dot*(cos(teta2)/2 + 1/3) - teta1_dot*teta2_dot*sin(teta2)
                                                                         (sin(teta2)*teta1_dot^2)/2 + teta2_dot_dot/3 + (49*cos(teta1 + teta2))/10 + teta1_dot_dot*(cos(teta2)/2 + 1/3)
Scrivo il sistema nella forma: B(q)*q_dot_dot + C(q,q_dot)*q_dot + g(q) = tau

Matrice B(q) dei termini inerziali:

[ M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O, J2A + M2*b2*l1*cos(teta2)]
[                   J2A + M2*b2*l1*cos(teta2),                       J2A]

Vettore delle accelerazioni angolari q_dot_dot:

 teta1_dot_dot
 teta2_dot_dot

Matrice C(q,q_dot) dei termini centrifughi e di Coriolis:

[ -2*M2*b2*l1*teta2_dot*sin(teta2), -M2*b2*l1*teta2_dot*sin(teta2)]
[    M2*b2*l1*teta1_dot*sin(teta2),                              0]
Vettore delle velocità angolari q_dot:

 teta1_dot
 teta2_dot

Vettore g(q) dei termini gravitazionali:


 M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)
                                         M2*ag*b2*cos(teta1 + teta2)

SPAZIO DI STATO

Vettore z2_dot:

                                                                                     ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)
 ((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

Teta1_dot_dot:
((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

Teta2_dot_dot:
((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

VARIABILI DI STATO
Vettore degli ingressi:

 tau1
 tau2
Variabile di stato x1_dot:

teta1_dot

Variabile di stato x2_dot:

teta2_dot

Variabile di stato x3_dot:

((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau2_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (J2A*tau1_ss)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (J2A*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

Variabile di stato x4_dot:

((J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (tau1_ss*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (tau2_ss*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)

MATRICI SPAZIO DI STATO
Matrice A (matrice dinamica del sistema ):



[                                           (J2A*(M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*ag*b2*sin(teta1 + teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                                                                                                                                                                                                                                                                                                                                                                                                                                                             (J2A*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*J2A*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*J2A*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2,                                             (2*M2*b2*l1*teta1_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*J2A*M2*b2*l1*teta2_dot*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                          (J2A*(2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ (M2*ag*b2*sin(teta1 + teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((M2*ag*(b2*sin(teta1 + teta2) + l1*sin(teta1)) + M1*ag*b1*sin(teta1))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), ((- M2*b2*l1*cos(teta2)*teta1_dot^2 + M2*ag*b2*sin(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - ((J2A + M2*b2*l1*cos(teta2))*(M2*b2*l1*cos(teta2)*teta2_dot^2 + 2*M2*b2*l1*teta1_dot*cos(teta2)*teta2_dot + M2*ag*b2*sin(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (M2*b2*l1*tau1_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*tau2_ss*sin(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (M2*b2*l1*sin(teta2)*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2*b2*l1*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) + (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(M2*b2*l1*sin(teta2)*teta1_dot^2 + M2*ag*b2*cos(teta1 + teta2))*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 + (2*M2^2*b2^2*l1^2*tau1_ss*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*cos(teta2)*sin(teta2)*(J2A + M2*b2*l1*cos(teta2))*(- M2*b2*l1*sin(teta2)*teta2_dot^2 - 2*M2*b2*l1*teta1_dot*sin(teta2)*teta2_dot + M2*ag*(b2*cos(teta1 + teta2) + l1*cos(teta1)) + M1*ag*b1*cos(teta1)))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2 - (2*M2^2*b2^2*l1^2*tau2_ss*cos(teta2)*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(- M2^2*b2^2*l1^2*cos(teta2)^2 + J2A*M2*l1^2 + J2A*J1O)^2, - (2*M2*b2*l1*teta2_dot*sin(teta2)*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2) - (2*M2*b2*l1*teta1_dot*sin(teta2)*(M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), -((2*M2*b2*l1*teta1_dot*sin(teta2) + 2*M2*b2*l1*teta2_dot*sin(teta2))*(J2A + M2*b2*l1*cos(teta2)))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

Matrice B (matrice ingresso del sistema ):

[                                                                                  0,                                                                                                   0]
[                                                                                  0,                                                                                                   0]
[                          J2A/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2),                  -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]
[ -(J2A + M2*b2*l1*cos(teta2))/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2), (M2*l1^2 + 2*M2*b2*cos(teta2)*l1 + J2A + J1O)/(J2A*J1O + J2A*M2*l1^2 - M2^2*b2^2*l1^2*cos(teta2)^2)]

Matrice C (matrice di uscita del sistema ):

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

Matrice D (matrice ingresso-uscita):

     0     0
     0     0
     0     0
     0     0

Matrice A con i valori:



[                       (49*sin(teta1 + teta2)*(cos(teta2)/2 + 1/3))/(10*(cos(teta2)^2/4 - 4/9)) - ((49*sin(teta1 + teta2))/30 + (49*sin(teta1))/10)/(cos(teta2)^2/4 - 4/9),                                                                                                                                                                                                                                                             (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)) - (tau2_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - ((cos(teta2)*teta2_dot^2)/6 + (teta1_dot*cos(teta2)*teta2_dot)/3 + (49*sin(teta1 + teta2))/30)/(cos(teta2)^2/4 - 4/9) + (((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9) + (cos(teta2)*sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(6*(cos(teta2)^2/4 - 4/9)^2) - (tau1_ss*cos(teta2)*sin(teta2))/(6*(cos(teta2)^2/4 - 4/9)^2) + (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2),              - (teta2_dot*sin(teta2))/(3*(cos(teta2)^2/4 - 4/9)) - (teta1_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9),               -((teta1_dot*sin(teta2))/3 + (teta2_dot*sin(teta2))/3)/(cos(teta2)^2/4 - 4/9)]
[ ((cos(teta2)/2 + 1/3)*((49*sin(teta1 + teta2))/10 + (147*sin(teta1))/10))/(cos(teta2)^2/4 - 4/9) - (49*sin(teta1 + teta2)*(cos(teta2) + 5/3))/(10*(cos(teta2)^2/4 - 4/9)), (tau2_ss*sin(teta2))/(cos(teta2)^2/4 - 4/9) - (tau1_ss*sin(teta2))/(2*(cos(teta2)^2/4 - 4/9)) - (sin(teta2)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - ((cos(teta2) + 5/3)*((49*sin(teta1 + teta2))/10 - (teta1_dot^2*cos(teta2))/2))/(cos(teta2)^2/4 - 4/9) + (sin(teta2)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)) + ((cos(teta2)/2 + 1/3)*((cos(teta2)*teta2_dot^2)/2 + teta1_dot*cos(teta2)*teta2_dot + (49*sin(teta1 + teta2))/10))/(cos(teta2)^2/4 - 4/9) - (tau2_ss*cos(teta2)*sin(teta2)*(cos(teta2) + 5/3))/(2*(cos(teta2)^2/4 - 4/9)^2) + (cos(teta2)*sin(teta2)*(cos(teta2) + 5/3)*((sin(teta2)*teta1_dot^2)/2 + (49*cos(teta1 + teta2))/10))/(2*(cos(teta2)^2/4 - 4/9)^2) + (tau1_ss*cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3))/(2*(cos(teta2)^2/4 - 4/9)^2) - (cos(teta2)*sin(teta2)*(cos(teta2)/2 + 1/3)*((49*cos(teta1 + teta2))/10 + (147*cos(teta1))/10 - (teta2_dot^2*sin(teta2))/2 - teta1_dot*teta2_dot*sin(teta2)))/(2*(cos(teta2)^2/4 - 4/9)^2), (teta1_dot*sin(teta2)*(cos(teta2) + 5/3))/(cos(teta2)^2/4 - 4/9) + (teta2_dot*sin(teta2)*(cos(teta2)/2 + 1/3))/(cos(teta2)^2/4 - 4/9), ((cos(teta2)/2 + 1/3)*(teta1_dot*sin(teta2) + teta2_dot*sin(teta2)))/(cos(teta2)^2/4 - 4/9)]

Matrice B con i valori:

[                                           0,                                           0]
[                                           0,                                           0]
[               -1/(3*(cos(teta2)^2/4 - 4/9)), (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9)]
[ (cos(teta2)/2 + 1/3)/(cos(teta2)^2/4 - 4/9),  -(cos(teta2) + 5/3)/(cos(teta2)^2/4 - 4/9)]

Matrice C con i valori:

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

Matrice D con i valori:

     0     0
     0     0
     0     0
     0     0

LINEARIZZAZIONE ATTORNO AL PUNTO DI EQUILIBRIO STATICO
Matrice A valutata nel punto di equilibrio:

         0         0    1.0000         0
         0         0         0    1.0000
    0.0000   -0.0000         0         0
   -0.0000    0.0000         0         0

Matrice B valutata nel punto di equilibrio:

         0         0
         0         0
    1.7143   -4.2857
   -4.2857   13.7143

Matrice C valutata nel punto di equilibrio:

     1     0     0     0
     0     1     0     0
     0     0     1     0
     0     0     0     1

Matrice D valutata nel punto di equilibrio:

     0     0
     0     0
     0     0
     0     0

ILC2dof
ILC2dof
ILC2dof
{Undefined function or variable 'li'.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('ILC2dof', 'C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m', 300)" style="font-weight:bold">ILC2dof</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',300,0)">line 300</a>)
    axis([-li/2 (l1+l2)+l1/2 -li/2 (l1+l2)+l1/2]);} 
opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\ILC2dof.m',300,0)
ILC2dof
ILC2dof
ILC2dof
ILC2dof
SIXDOF_DHparameters
--------------------
Robot: (6 bodies)

 Idx    Body Name   Joint Name   Joint Type    Parent Name(Idx)   Children Name(s)
 ---    ---------   ----------   ----------    ----------------   ----------------
   1        body1         jnt1     revolute             base(0)   body2(2)  
   2        body2         jnt2     revolute            body1(1)   body3(3)  
   3        body3         jnt3     revolute            body2(2)   body4(4)  
   4        body4         jnt4     revolute            body3(3)   body5(5)  
   5        body5         jnt5     revolute            body4(4)   body6(6)  
   6        body6         jnt6     revolute            body5(5)   
--------------------
p =
    0.1383
    0.2073
    1.5003
deg06 =
   56.2923
  130.4707
 -104.3960
  180.0000
   26.0747
 -123.7077
SIXDOF_DHparameters
--------------------
Robot: (6 bodies)

 Idx    Body Name   Joint Name   Joint Type    Parent Name(Idx)   Children Name(s)
 ---    ---------   ----------   ----------    ----------------   ----------------
   1        body1         jnt1     revolute             base(0)   body2(2)  
   2        body2         jnt2     revolute            body1(1)   body3(3)  
   3        body3         jnt3     revolute            body2(2)   body4(4)  
   4        body4         jnt4     revolute            body3(3)   body5(5)  
   5        body5         jnt5     revolute            body4(4)   body6(6)  
   6        body6         jnt6     revolute            body5(5)   
--------------------
p =
   -0.3593
   -0.0980
    0.9547
deg06 =
 -164.7416
  128.2448
 -135.7526
         0
    7.5078
 -164.7416
SIXDOF_DHparameters
--------------------
Robot: (6 bodies)

 Idx    Body Name   Joint Name   Joint Type    Parent Name(Idx)   Children Name(s)
 ---    ---------   ----------   ----------    ----------------   ----------------
   1        body1         jnt1     revolute             base(0)   body2(2)  
   2        body2         jnt2     revolute            body1(1)   body3(3)  
   3        body3         jnt3     revolute            body2(2)   body4(4)  
   4        body4         jnt4     revolute            body3(3)   body5(5)  
   5        body5         jnt5     revolute            body4(4)   body6(6)  
   6        body6         jnt6     revolute            body5(5)   
--------------------
p =
    0.0676
   -0.3350
    0.7251
deg06 =
  -78.5871
  125.3804
 -148.3485
         0
   22.9681
  -78.5871
SIXDOF_DHparameters
--------------------
Robot: (6 bodies)

 Idx    Body Name   Joint Name   Joint Type    Parent Name(Idx)   Children Name(s)
 ---    ---------   ----------   ----------    ----------------   ----------------
   1        body1         jnt1     revolute             base(0)   body2(2)  
   2        body2         jnt2     revolute            body1(1)   body3(3)  
   3        body3         jnt3     revolute            body2(2)   body4(4)  
   4        body4         jnt4     revolute            body3(3)   body5(5)  
   5        body5         jnt5     revolute            body4(4)   body6(6)  
   6        body6         jnt6     revolute            body5(5)   
--------------------
p =
   -0.3604
    0.2547
    0.8612
deg06 =
  144.7452
  120.9024
 -138.1723
         0
   17.2699
  144.7452
{Not enough input arguments.
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('dk06', 'C:\Users\Simone\Documents\MATLAB\6DOF\dk06.m', 12)" style="font-weight:bold">dk06</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\dk06.m',12,0)">line 12</a>)
    0    -pi/2	  0     teta4;
Error in <a href="matlab:matlab.internal.language.introspective.errorDocCallback('SIXDOF_DHparameters', 'C:\Users\Simone\Documents\MATLAB\6DOF\SIXDOF_DHparameters.m', 152)" style="font-weight:bold">SIXDOF_DHparameters</a> (<a href="matlab: opentoline('C:\Users\Simone\Documents\MATLAB\6DOF\SIXDOF_DHparameters.m',152,0)">line 152</a>)
                            pw_eu(c+q3_max*count,:)=dk06(q1(i),q2(j),q3(z));} 
SIXDOF_DHparameters
--------------------
Robot: (6 bodies)

 Idx    Body Name   Joint Name   Joint Type    Parent Name(Idx)   Children Name(s)
 ---    ---------   ----------   ----------    ----------------   ----------------
   1        body1         jnt1     revolute             base(0)   body2(2)  
   2        body2         jnt2     revolute            body1(1)   body3(3)  
   3        body3         jnt3     revolute            body2(2)   body4(4)  
   4        body4         jnt4     revolute            body3(3)   body5(5)  
   5        body5         jnt5     revolute            body4(4)   body6(6)  
   6        body6         jnt6     revolute            body5(5)   
--------------------
p =
   -0.2257
   -0.4349
    0.7083
deg06 =
 -117.4268
  111.2098
 -142.8112
         0
   31.6014
 -117.4268
SIXDOF_DHparameters
--------------------
Robot: (6 bodies)

 Idx    Body Name   Joint Name   Joint Type    Parent Name(Idx)   Children Name(s)
 ---    ---------   ----------   ----